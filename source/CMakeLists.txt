message(STATUS "Generating Xeno Engine Build System")

link_directories(${XEN_LIB_DIR})

include(sources.cmake)

add_library               (xen-core STATIC  ${XEN_HEADERS_CORE} ${XEN_SOURCES_CORE})
target_include_directories(xen-core PUBLIC  ${CMAKE_CURRENT_LIST_DIR}/core/include/)
target_include_directories(xen-core PRIVATE ${CMAKE_CURRENT_LIST_DIR}/core/impl/)


add_library               (xen-math STATIC ${XEN_HEADERS_MATH} ${XEN_SOURCES_MATH} )
target_include_directories(xen-math PUBLIC ${CMAKE_CURRENT_LIST_DIR}/core/include/)
target_include_directories(xen-math PUBLIC ${CMAKE_CURRENT_LIST_DIR}/math/include/)


add_library               (xen-kernel STATIC ${XEN_HEADERS_KERNEL} ${XEN_SOURCES_KERNEL})
target_include_directories(xen-kernel PUBLIC ${CMAKE_CURRENT_LIST_DIR}/core/include/  )
target_include_directories(xen-kernel PUBLIC ${CMAKE_CURRENT_LIST_DIR}/kernel/include/)
if(UNIX)
	target_link_libraries(xen-kernel dl)
endif()


add_library               (xen-graphics STATIC ${XEN_HEADERS_GRAPHICS} ${XEN_SOURCES_GRAPHICS})
target_include_directories(xen-graphics PRIVATE ${XEN_EXTLIBS_DIR}/stb/)
target_include_directories(xen-graphics PRIVATE ${XEN_EXTLIBS_DIR}/assimp-3.3.1/include/)
target_include_directories(xen-graphics PRIVATE ${CMAKE_CURRENT_LIST_DIR}/graphics/impl/)
target_include_directories(xen-graphics PUBLIC  ${CMAKE_CURRENT_LIST_DIR}/graphics/include/)
target_link_libraries     (xen-graphics PUBLIC  xen-core)
target_link_libraries     (xen-graphics PUBLIC  xen-math)
target_link_libraries     (xen-graphics PRIVATE assimp  )
if(UNIX)
	target_link_libraries(xen-graphics PUBLIC X11)
endif()

add_library               (xen-sren STATIC  ${XEN_HEADERS_SREN} ${XEN_SOURCES_SREN})
target_include_directories(xen-sren PUBLIC  ${CMAKE_CURRENT_LIST_DIR}/sren/include/)
target_include_directories(xen-sren PRIVATE ${CMAKE_CURRENT_LIST_DIR}/sren/impl/)
target_include_directories(xen-sren PUBLIC  ${CMAKE_CURRENT_LIST_DIR}/core/include/)
target_include_directories(xen-sren PUBLIC  ${CMAKE_CURRENT_LIST_DIR}/math/include/)
target_include_directories(xen-sren PRIVATE ${CMAKE_CURRENT_LIST_DIR}/graphics/impl/)
target_include_directories(xen-sren PRIVATE ${XEN_EXTLIBS_DIR}/thpool/)
target_link_libraries     (xen-sren xen-graphics)
target_link_libraries     (xen-sren PRIVATE thpool)
target_link_libraries     (xen-sren PRIVATE pthread)
if(UNIX)
	target_link_libraries(xen-sren PUBLIC Xext)
endif()

add_library               (xen-module-gl SHARED  ${XEN_HEADERS_GL} ${XEN_SOURCES_GL})
target_include_directories(xen-module-gl PUBLIC  ${CMAKE_CURRENT_LIST_DIR}/module-gl/include/)
target_include_directories(xen-module-gl PRIVATE ${XEN_EXTLIBS_DIR}/glew-2.1.0/include/)
target_include_directories(xen-module-gl PRIVATE ${CMAKE_CURRENT_LIST_DIR}/graphics/impl/)
target_link_libraries     (xen-module-gl libglew_shared)
target_link_libraries     (xen-module-gl xen-graphics)
target_link_libraries     (xen-module-gl xen-kernel  )

add_library               (xen-module-sren-rasterize SHARED  ${XEN_HEADERS_MODULE_SREN_RASTERIZE} ${XEN_SOURCES_MODULE_SREN_RASTERIZE})
target_include_directories(xen-module-sren-rasterize PUBLIC  ${CMAKE_CURRENT_LIST_DIR}/module-sren-rasterize/include/)
target_include_directories(xen-module-sren-rasterize PRIVATE ${CMAKE_CURRENT_LIST_DIR}/graphics/impl/)
target_include_directories(xen-module-sren-rasterize PRIVATE ${CMAKE_CURRENT_LIST_DIR}/sren/impl/)
target_include_directories(xen-module-sren-rasterize PRIVATE ${XEN_EXTLIBS_DIR}/thpool/)
target_link_libraries     (xen-module-sren-rasterize PRIVATE thpool)
target_link_libraries     (xen-module-sren-rasterize PRIVATE pthread)
target_link_libraries     (xen-module-sren-rasterize PRIVATE xen-sren)
target_link_libraries     (xen-module-sren-rasterize PRIVATE xen-graphics)
target_link_libraries     (xen-module-sren-rasterize PRIVATE xen-kernel  )



add_library               (xen-module-sren-raytrace STATIC  ${XEN_HEADERS_MODULE_SREN_RAYTRACE} ${XEN_SOURCES_MODULE_SREN_RAYTRACE})
target_include_directories(xen-module-sren-raytrace PUBLIC  ${CMAKE_CURRENT_LIST_DIR}/module-sren-raytrace/include/)
target_include_directories(xen-module-sren-raytrace PRIVATE ${CMAKE_CURRENT_LIST_DIR}/graphics/impl/)
target_include_directories(xen-module-sren-raytrace PRIVATE ${CMAKE_CURRENT_LIST_DIR}/sren/impl/)
target_include_directories(xen-module-sren-raytrace PRIVATE ${CMAKE_CURRENT_LIST_DIR}/module-sren-rasterize/src/)
target_include_directories(xen-module-sren-raytrace PRIVATE ${XEN_EXTLIBS_DIR}/thpool/)
target_link_libraries     (xen-module-sren-raytrace PRIVATE thpool)
target_link_libraries     (xen-module-sren-raytrace PRIVATE pthread)
target_link_libraries     (xen-module-sren-raytrace PRIVATE xen-sren)
target_link_libraries     (xen-module-sren-raytrace PRIVATE xen-graphics)
target_link_libraries     (xen-module-sren-raytrace PRIVATE xen-kernel  )


add_library               (xen-module-sren-atom STATIC  ${XEN_HEADERS_MODULE_SREN_ATOM} ${XEN_SOURCES_MODULE_SREN_ATOM})
target_include_directories(xen-module-sren-atom PUBLIC  ${CMAKE_CURRENT_LIST_DIR}/module-sren-atom/include/)
target_include_directories(xen-module-sren-atom PRIVATE ${CMAKE_CURRENT_LIST_DIR}/graphics/impl/)
target_include_directories(xen-module-sren-atom PRIVATE ${CMAKE_CURRENT_LIST_DIR}/sren/impl/)
target_include_directories(xen-module-sren-atom PRIVATE ${XEN_EXTLIBS_DIR}/thpool/)
target_link_libraries     (xen-module-sren-atom PRIVATE thpool)
target_link_libraries     (xen-module-sren-atom PRIVATE pthread)
target_link_libraries     (xen-module-sren-atom PRIVATE xen-sren)
target_link_libraries     (xen-module-sren-atom PRIVATE xen-graphics)
target_link_libraries     (xen-module-sren-atom PRIVATE xen-kernel  )


set_target_properties(xen-core                  PROPERTIES FOLDER "xeno_engine")
set_target_properties(xen-math                  PROPERTIES FOLDER "xeno_engine")
set_target_properties(xen-graphics              PROPERTIES FOLDER "xeno_engine")
set_target_properties(xen-module-gl             PROPERTIES FOLDER "xeno_engine")
set_target_properties(xen-module-sren-rasterize PROPERTIES FOLDER "xeno_engine")
set_target_properties(xen-module-sren-raytrace  PROPERTIES FOLDER "xeno_engine")
set_target_properties(xen-module-sren-atom      PROPERTIES FOLDER "xeno_engine")
